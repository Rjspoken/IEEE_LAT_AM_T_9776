# -*- coding: utf-8 -*-
"""Rama_Sr_XG.ipynb

Automatically generated by Colab.


"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import time

df = pd.read_csv('/content/drive/MyDrive/Python/alldataset.csv')
print(df.shape)
df.head()

X = df.iloc[:, :4]
y = df.iloc[:, 4]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)
print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)

from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_percentage_error
import xgboost as xgb

# Create XGBoost regressor object
xgb_model = xgb.XGBRegressor()

# Fit the model
start_time = time.time()
xgb_model.fit(X_train, y_train)
fit_time = time.time() - start_time

# Make predictions
start_time = time.time()
y_pred = xgb_model.predict(X_test)
pred_time = time.time() - start_time

# Calculate metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
mape = mean_absolute_percentage_error(y_test, y_pred)

print("MSE:", mse)
print("R-squared:", r2)
print("MAPE:", mape)
print("Fit time:", fit_time)
print("Prediction time:", pred_time)

